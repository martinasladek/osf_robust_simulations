---
title: simulation processing
---

# Setup 

## Packages and functions

```{r}
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(purrr)

options(dplyr.summarise.inform = FALSE)

text_as_fun <- function(function_string){
  eval(parse(text = function_string))
}

data_identifier = "CAT-2W"


file_names <- list.files("../data/simulation_exports/", pattern = data_identifier)
file_paths <- list.files("../data/simulation_exports/", pattern = data_identifier, full.names = TRUE)

sim_list <- purrr::map(
  .x = file_paths, 
  .f = readRDS
)


```

## Pre-processing

Define variables for identifying unique cells 

```{r}
cell_ids <- c("design", "b", "n_rm", "target_vr", "target_skew", "target_kurt", "n_het_pred")
```

Merge into a df:

```{r}
sim_df <- purrr::reduce(
  .x = sim_list, 
  .f = dplyr::bind_rows
)
```

# Summaries 

## Power/false-positives

```{r}
sim_df_power_sum <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("_p")) |> 
  tidyr::pivot_longer(
    cols = -c(all_of(cell_ids))
  ) |> 
  dplyr::mutate(
    is_sig = value < 0.05
  ) |> 
  dplyr::filter(!is.na(is_sig)) |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    prop_sig = sum(is_sig, na.rm = TRUE)/length(is_sig)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    )
  )
```

```{r fig.height=10, fig.width=8}
sim_df_power_sum |> 
  ggplot2::ggplot(aes(x = n_rm, y = prop_sig, linetype = name, colour = name)) + 
  geom_line() + 
  scale_x_continuous(breaks = unique(sim_df_power_sum$n_rm)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b)) + 
  scale_colour_viridis_d() + 
  theme_minimal() +
  theme(
    strip.text.y.right = element_text(angle = 0)
  )
```

## Coverage of CIs

```{r}
sim_df_cover_df <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("conf")) |> 
  dplyr::mutate(row_id = 1:length(b)) |> 
  tidyr::pivot_longer(
    cols = -c(all_of(cell_ids), row_id)
  ) |> 
  dplyr::mutate(
    ci = ifelse(stringr::str_detect(name, "low"), "lower", "upper"), 
    name = stringr::str_remove_all(name, "_conf.low") |> 
      stringr::str_remove_all("_conf.high")
  ) |> 
  tidyr::pivot_wider(
    id_cols = c(all_of(cell_ids), name, row_id), 
    names_from = ci, values_from = value
  ) |> 
  dplyr::mutate(
    is_covered = dplyr::between(b, lower, upper)
  ) |> 
  dplyr::filter(!is.na(is_covered))

sim_df_cover_sum <- sim_df_cover_df |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    prop_covered = sum(is_covered, na.rm = TRUE)/length(is_covered)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    )
  )
```

```{r fig.height=10, fig.width=8}
sim_df_cover_sum |> 
  ggplot2::ggplot(aes(x = n_rm, y = prop_covered, linetype = name, colour = name)) + 
  geom_line() + 
  scale_x_continuous(breaks = unique(sim_df_cover_sum$n_rm)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b)) + 
  scale_colour_viridis_d() +
  theme_minimal() +
  theme(
    strip.text.y.right = element_text(angle = 0)
  )
```

### CI width 

```{r}
sim_df_ci_width_sum <- sim_df_cover_df |> 
  dplyr::mutate(
    ci_width  = upper - lower
  ) |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    mean_width = mean(ci_width, na.rm = TRUE)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    )
  )
```

## Bias in beta 

Bootstrapping here only affects confidence intervals (and hypothesis tests)

```{r}
sim_df_bias_sum <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("t_diff")) |> 
  tidyr::pivot_longer(-all_of(cell_ids)) |> 
  dplyr::mutate(
    b_diff = value - b
  )  |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    mean_diff = mean(b_diff, na.rm = TRUE), 
    sd_diff = sd(b_diff, na.rm = TRUE)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    )
  )
```


### Mean only

```{r fig.height=10, fig.width=8}
sim_df_bias_sum |> 
  ggplot2::ggplot(aes(x = n_rm, y = mean_diff, linetype = name, colour = name)) +
  geom_point() + 
  geom_line() + 
  scale_x_continuous(breaks = unique(sim_df_bias_sum$n_rm)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
    scales = "free_y"
    ) + 
  scale_colour_viridis_d() +
  theme_minimal() +
  theme(
    strip.text.y.right = element_text(angle = 0)
  )
```

### SD only

```{r fig.height=10, fig.width=8}
sim_df_bias_sum |> 
  ggplot2::ggplot(aes(x = n_rm, y = sd_diff, linetype = name, colour = name)) +
  geom_point() + 
  geom_line() + 
  scale_x_continuous(breaks = unique(sim_df_bias_sum$n_rm)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
    scales = "free_y"
    ) + 
  scale_colour_viridis_d() +
  theme_minimal() +
  theme(
    strip.text.y.right = element_text(angle = 0)
  )
```

### Shifted coverage

```{r}
sim_df_cover_shift <- 
  dplyr::left_join(
    sim_df_cover_df,
    sim_df_bias_sum |> 
      dplyr::mutate(name = stringr::str_remove_all(name, "_diff")),
      dplyr::select(-plot_group), 
    by = c(all_of(cell_ids), "name")
  ) |> 
  dplyr::mutate(
    lower_shifted = lower - mean_diff, 
    upper_shifted = upper - mean_diff
    ) |> 
  dplyr::mutate(
    is_covered = dplyr::between(b, lower_shifted, upper_shifted)
  ) |> 
  dplyr::filter(!is.na(lower_shifted))
```

```{r}
sim_df_cover_shift_sum <- sim_df_cover_shift |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    prop_covered = sum(is_covered, na.rm = TRUE)/length(is_covered)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    )
  )
```

```{r fig.height=50, fig.width=10, fig.align='center'}
sim_df_cover_shift_plot <- sim_df_cover_shift_sum |> 
  ggplot2::ggplot(aes(x = n_rm, y = prop_covered, linetype = name, colour = name)) + 
  geom_line() + 
  scale_x_continuous(breaks = unique(sim_df_cover_sum$n_rm)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b)) + 
  scale_colour_viridis_d() +
  theme_minimal() +
  theme(
    strip.text.y.right = element_text(angle = 0)
  )
```

## Model errors 

```{r}
sim_df_model_errors_sum <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("diff")) |> 
  tidyr::pivot_longer(-all_of(cell_ids)) |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    n_fail = sum(is.na(value))/length(value)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ) 
  )


```

```{r fig.height=35, fig.width=10, fig.align='center'}
model_errors_plot <- sim_df_model_errors_sum |> 
  ggplot2::ggplot(aes(x = n_rm, y = n_fail, 
                      linetype = name, colour = name, shape = name)) + 
  geom_line() + 
  scale_x_continuous(breaks = unique(sim_df_cover_sum$n_rm)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b)) + 
  scale_colour_viridis_d() +
  theme_minimal() +
  theme(
    strip.text.y.right = element_text(angle = 0)
  )
```



```{r}
sim_export <- purrr::map(
  .x = ls(pattern = "sum"),
  .f = text_as_fun
)

names(sim_export) <- ls(pattern = "sum")

saveRDS(
  sim_export,
  paste0(
    "../data/processed_data/sim_export_", sim_export[[1]]$design[1], ".rds"),
)
```

