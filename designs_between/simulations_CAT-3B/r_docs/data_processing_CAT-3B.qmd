---
title: Simulation data processing (CAT-3B)
format: 
  html:
    toc: true
    toc-depth: 5
    toc-expand: 5
    fig-align: center
    embed-resources: true
    
knitr: 
  opts_chunk: 
    echo: false
    message: false
    warning: false
---

# Setup 

## Packages and functions

```{r echo=TRUE}
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(ggiraph)
library(purrr)

data_identifier = "CAT-3B"

text_as_fun <- function(function_string){
  eval(parse(text = function_string))
}
  
file_names <- list.files("../data/simulation_exports/", pattern = data_identifier)
file_paths <- list.files("../data/simulation_exports/", pattern = data_identifier, full.names = TRUE)

sim_list <- purrr::map(
  .x = file_paths, 
  .f = readRDS
)



```

## Pre-processing

1. Define variables for identifying unique cells 

```{r}
cell_ids <- c("design", "b", "n_bw", "n_ratio", "target_vr", "target_skew", "target_kurt", "n_het_pred")
```

2. Remove all intercepts (not of interest)

```{r}
sim_list <- purrr::map(
  .x = sim_list, 
  .f = \(x) x |> dplyr::filter(lm_term != "(Intercept)")
)
```


3. Remove "gb1b" term - not manipulated on heteroscedasticity

```{r}
sim_list <- purrr::map(
  .x = sim_list, 
  .f = \(x) x |> dplyr::filter(lm_term != "gb1b")
)
```

4. Merge into a df

```{r}
sim_df <- purrr::reduce(
  .x = sim_list, 
  .f = dplyr::bind_rows
) |> 
  dplyr::filter(n_ratio != 1.5)
```






# Summaries

## Model fit 

```{r}
sim_df_overall_sum <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("p.value")) |> 
  tidyr::pivot_longer(
    cols = -all_of(cell_ids)
  ) |> 
  dplyr::filter(name == "lm_overall_p.value") |> 
  dplyr::mutate(
    is_sig = value < 0.05
  ) |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    prop_sig = sum(is_sig, na.rm = TRUE)/length(is_sig)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; N ratio = ", n_ratio, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ), 
    name = "OLS (overall fit)"
  )
```

```{r}
theme_5_lines <- function(gg_object){
  gg_object + 
    scale_colour_viridis_d(option = "A", end = 0.8) + 
    scale_fill_viridis_d(option = "A", end = 0.8) + 
    scale_linetype_manual(values = c("solid", "dotted", "dashed", "dotdash", "twodash")) + 
    scale_shape_manual(values = c(21,22,23,24,25)) + 
    theme_minimal(base_size = 15) +
    theme(
      legend.position = "top",
      legend.title = element_blank(),
      strip.text.y.right = element_text(angle = 0), 
      panel.spacing = unit(1, "lines")
    ) 
}
```

```{r fig.height=35, fig.width=10, fig.align='center'}
sim_df_overall_plot <- 
  sim_df_overall_sum |> 
  ggplot2::ggplot(aes(
    x = n_bw, y = prop_sig, linetype = name, colour = name, shape = name, tooltip = name, fill = name)) + 
  geom_line() + 
  ggiraph::geom_point_interactive(size = 2) + 
  scale_x_continuous(breaks = unique(sim_df_overall_sum$n_bw)) + 
  labs(x = "Sample size", y = "Proportion of p < .05") + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b))

sim_df_overall_plot <- theme_5_lines(sim_df_overall_plot)  
  
ggiraph::girafe(ggobj = sim_df_overall_plot)
```


## Power/false-positives

```{r}
sim_df_power_sum <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("p.value")) |> 
  tidyr::pivot_longer(
    cols = -all_of(cell_ids)
  ) |> 
  dplyr::filter(name != "lm_overall_p.value") |> 
  dplyr::mutate(
    is_sig = value < 0.05
  ) |> 
  dplyr::filter(!is.na(is_sig)) |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    prop_sig = sum(is_sig, na.rm = TRUE)/length(is_sig)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; N ratio = ", n_ratio, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ), 
    name = factor(name, labels = c("OLS", "Bootstrap", "HC4", "MM/KS", "MM"))
  )
```




```{r fig.height=35, fig.width=10, fig.align='center'}
sim_df_power_plot <- 
  sim_df_power_sum |> 
  ggplot2::ggplot(aes(
    x = n_bw, y = prop_sig, linetype = name, colour = name, shape = name, tooltip = name, fill = name)) + 
  geom_line() + 
  ggiraph::geom_point_interactive(size = 2) + 
  scale_x_continuous(breaks = unique(sim_df_power_sum$n_bw)) + 
  labs(x = "Sample size", y = "Proportion of p < .05") + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b))

sim_df_power_plot <- theme_5_lines(sim_df_power_plot)  
  
ggiraph::girafe(ggobj = sim_df_power_plot)
```

## Coverage of CIs

```{r}
sim_df_cover <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("conf")) |> 
  dplyr::mutate(row_id = 1:length(b)) |> 
  tidyr::pivot_longer(
    cols = -c(all_of(cell_ids), row_id)
  ) |> 
  dplyr::mutate(
    ci = ifelse(stringr::str_detect(name, "low"), "lower", "upper"), 
    name = stringr::str_remove_all(name, "_conf.low") |> 
      stringr::str_remove_all("_conf.high")
  ) |> 
  tidyr::pivot_wider(
    id_cols = c(all_of(cell_ids), name, row_id), 
    names_from = ci, values_from = value
  ) |> 
  dplyr::mutate(
    is_covered = dplyr::between(b, lower, upper)
  ) |> 
  dplyr::filter(!is.na(is_covered))

sim_df_cover_sum <- sim_df_cover |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    prop_covered = sum(is_covered, na.rm = TRUE)/length(is_covered)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; N ratio = ", n_ratio, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ), 
    name = factor(name, labels = c("OLS", "Bootstrap", "HC4", "MM/KS", "MM"))
  )
```

```{r fig.height=35, fig.width=10, fig.align='center'}
sim_df_cover_plot <- sim_df_cover_sum |> 
  ggplot2::ggplot(aes(x = n_bw, y = prop_covered, 
                      linetype = name, colour = name, shape = name, tooltip = name, fill = name)) + 
  geom_line() + 
  ggiraph::geom_point_interactive(size = 2) + 
  scale_x_continuous(breaks = unique(sim_df_cover_sum$n_bw)) + 
  labs(x = "Sample size", y = "CI coverage") + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
   # scales = "free_y"
    ) 

sim_df_cover_plot <- theme_5_lines(sim_df_cover_plot)  
  
ggiraph::girafe(ggobj = sim_df_cover_plot)
```

### CI width 

```{r}
sim_df_ci_width_sum <- sim_df_cover |> 
  dplyr::mutate(
    ci_width  = upper - lower
  ) |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    mean_width = mean(ci_width, na.rm = TRUE)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; N ratio = ", n_ratio, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ), 
    name = factor(name, labels = c("OLS", "Bootstrap", "HC4", "MM/KS", "MM"))
  )
```

```{r fig.height=35, fig.width=10, fig.align='center'}
sim_df_ci_width_plot <- sim_df_ci_width_sum |> 
  ggplot2::ggplot(aes(x = n_bw, y = mean_width, 
                      linetype = name, colour = name, shape = name, tooltip = name, fill = name)) +
  ggiraph::geom_point_interactive(size = 2) + 
  geom_line() + 
  labs(x = "Sample size", y = "Mean difference") +  
  scale_x_continuous(breaks = unique(sim_df_ci_width_sum$n_bw)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
 #   scales = "free_y"
    )

sim_df_ci_width_plot <- theme_5_lines(sim_df_ci_width_plot)
ggiraph::girafe(ggobj = sim_df_ci_width_plot)
```


## Bias in beta 

```{r}
theme_4_lines <- function(gg_object){
  gg_object + 
    scale_colour_viridis_d(option = "A", end = 0.8) + 
    scale_fill_viridis_d(option = "A", end = 0.8) + 
    scale_linetype_manual(values = c("solid", "dotted", "dotdash", "twodash")) + 
    scale_shape_manual(values = c(21,22,24,25)) + 
    theme_minimal(base_size = 15) +
    theme(
      legend.position = "top",
      legend.title = element_blank(),
      strip.text.y.right = element_text(angle = 0), 
      panel.spacing = unit(1, "lines")
    ) 
}
```

```{r}
sim_df_bias_df <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("estimate")) |> 
  dplyr::mutate(row_id = 1:length(b)) |> 
  tidyr::pivot_longer(cols = -c(all_of(cell_ids), row_id )) |> 
  dplyr::mutate(
    b_diff = value - b
  ) 

sim_df_bias_sum <- sim_df_bias_df |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    mean_diff = mean(b_diff, na.rm = TRUE), 
    sd_diff = sd(b_diff, na.rm = TRUE)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; N ratio = ", n_ratio, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ), 
    name = factor(name, labels = c("OLS", "Bootstrap", "MM/KS", "MM"))
  )
```

### Mean difference  

```{r fig.height=35, fig.width=10, fig.align='center'}
sim_df_bias_mean_plot <- sim_df_bias_sum |> 
  ggplot2::ggplot(aes(x = n_bw, y = mean_diff, 
                      linetype = name, colour = name, shape = name, tooltip = name, fill = name)) +
  ggiraph::geom_point_interactive(size = 2) + 
  geom_line() + 
  labs(x = "Sample size", y = "Mean difference") +  
  scale_x_continuous(breaks = unique(sim_df_bias_sum$n_bw)) + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
    scales = "free_y"
    )

sim_df_bias_mean_plot <- theme_4_lines(sim_df_bias_mean_plot)
ggiraph::girafe(ggobj = sim_df_bias_mean_plot)
```

### SD of estimates

```{r fig.height=35, fig.width=10, fig.align='center'}
sim_df_bias_sd_plot <- sim_df_bias_sum |> 
  ggplot2::ggplot(aes(x = n_bw, y = sd_diff, 
                      linetype = name, colour = name, shape = name, tooltip = name, fill = name)) +
  geom_line() + 
  ggiraph::geom_point_interactive(size = 2) +
  scale_x_continuous(breaks = unique(sim_df_bias_sum$n_bw)) + 
  labs(x = "Sample size", y = "SD") + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
   # scales = "free_y"
    ) 

sim_df_bias_sd_plot <- theme_4_lines(sim_df_bias_sd_plot)
ggiraph::girafe(ggobj = sim_df_bias_sd_plot)
```



### Shifted coverage

```{r}
sim_df_cover_shift <- sim_df_cover |> 
  dplyr::mutate(name_merge = factor(name, labels = c("OLS", "Bootstrap", "OLS", "MM/KS", "MM"))) |> 
  dplyr::left_join(
    sim_df_bias_sum |> 
      dplyr::mutate(name_merge = name) |> 
      dplyr::select(-name, -plot_group), 
    by = c(all_of(cell_ids), "name_merge")
  ) |> 
  dplyr::mutate(
    lower_shifted = lower - mean_diff, 
    upper_shifted = upper - mean_diff
    ) |> 
  dplyr::mutate(
    is_covered = dplyr::between(b, lower_shifted, upper_shifted)
  ) |> 
  dplyr::filter(!is.na(lower_shifted))
```


```{r}
sim_df_cover_shift_sum <- sim_df_cover_shift |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    prop_covered = sum(is_covered, na.rm = TRUE)/length(is_covered)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; N ratio = ", n_ratio, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ), 
    name = factor(name, labels = c("OLS", "Bootstrap", "HC4", "MM/KS", "MM"))
  )
```

```{r fig.height=35, fig.width=10, fig.align='center'}
sim_df_cover_shift_plot <- sim_df_cover_shift_sum |> 
  ggplot2::ggplot(aes(x = n_bw, y = prop_covered, 
                      linetype = name, colour = name, shape = name, tooltip = name, fill = name)) + 
  geom_line() + 
  ggiraph::geom_point_interactive(size = 2) + 
  scale_x_continuous(breaks = unique(sim_df_cover_sum$n_bw)) + 
  labs(x = "Sample size", y = "CI coverage") + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
   # scales = "free_y"
    ) 

sim_df_cover_shift_plot <- theme_5_lines(sim_df_cover_shift_plot)  
  
ggiraph::girafe(ggobj = sim_df_cover_shift_plot)
```

## Model errors 

```{r}
sim_df_model_errors_sum <- sim_df |> 
  dplyr::select(all_of(cell_ids), contains("p.value")) |> 
  tidyr::pivot_longer(-all_of(cell_ids)) |> 
  dplyr::filter(name != "lm_overall_p.value") |> 
  dplyr::group_by(across(c(all_of(cell_ids), name))) |> 
  dplyr::summarise(
    n_fail = sum(is.na(value))/length(value)
  ) |> 
  dplyr::mutate(
    plot_group = paste0(
      "Skewness = ", target_skew, "; kurtosis = ", target_kurt, "; 
      VR = ", target_vr, "; N ratio = ", n_ratio, "; \n", 
      n_het_pred, " heteroscedastic predictor(s)"
    ), 
  )


```

```{r fig.height=35, fig.width=10, fig.align='center'}
model_errors_plot <- sim_df_model_errors_sum |> 
  ggplot2::ggplot(aes(x = n_bw, y = n_fail, 
                      linetype = name, colour = name, shape = name, tooltip = name, fill = name))+
  geom_line() + 
  ggiraph::geom_point_interactive(size = 2) +
  scale_x_continuous(breaks = unique(sim_df_bias_sum$n_bw)) + 
  labs(x = "Sample size", y = "SD") + 
  facet_grid(
    rows = vars(plot_group), cols = vars(b), 
   # scales = "free_y"
    ) 


model_errors_plot <- theme_5_lines(model_errors_plot)
ggiraph::girafe(ggobj = model_errors_plot)
```



```{r}
sim_export <- purrr::map(
  .x = ls(pattern = "sum"),
  .f = text_as_fun
)

names(sim_export) <- ls(pattern = "sum")

saveRDS(
  sim_export,
  paste0(
    "../data/processed_data/sim_export_", sim_export[[1]]$design[1], ".rds"), 
)
```

